{"version":3,"sources":["ThemeContext.js","Colours.js","components/Form.js","components/FilterButton.js","components/Todo.js","components/Home.js","components/About.js","ThemeToggler.js","components/Navbar.js","components/Error.js","components/City.js","components/API.js","App.js","index.js"],"names":["ThemeContext","React","createContext","AppTheme","light","textColor","textColor2","backgroundColor","borderColor","buttonColor","buttonColor2","saveColor","body","dark","Form","props","useState","name","setName","theme","useContext","currentTheme","onSubmit","e","preventDefault","addTask","className","htmlFor","style","color","type","id","autoComplete","value","onChange","target","FilterButton","aria-pressed","isPressed","onClick","setFilter","Todo","isEditing","setEditing","newName","setNewName","editingTemplate","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","DATA","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","Home","tasks","setTasks","filter","updatedTasks","map","remainingTasks","editedTaskList","useEffect","data","localStorage","getItem","JSON","parse","setItem","stringify","taskList","key","filterList","tasksNoun","length","headingText","newTask","nanoid","aria-labelledby","removeItem","About","themeTogglerStyle","cursor","padding","ThemeToggler","themeMode","setThemeMode","title","NavBar","link_style","to","Error","City","full_name","population","latitude","longitude","API","message","setMessage","city","setCity","setData","instance","axios","create","baseURL","headers","params","search","get","then","response","url","_embedded","_links","href","city_data","location","latlon","catch","error","console","log","App","themeHook","GlobalStyles","createGlobalStyle","Provider","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0968b8e7.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\n//first element in array is current theme mode\r\n//second is function that would be used to update theme\r\nconst ThemeContext = React.createContext([\"light\", () => {}]);\r\nexport default ThemeContext;\r\n\r\n","const AppTheme = {\r\n    light: {\r\n        textColor: \"#000\",\r\n        textColor2: \"#000\",\r\n        backgroundColor: \"#eee\",\r\n        borderColor: 'black',\r\n        buttonColor: '#de4463',\r\n        buttonColor2: 'white',\r\n        saveColor: 'black',\r\n        body: '#eeeeee'\r\n    },\r\n    dark: {\r\n        textColor: \"#fff\",\r\n        textColor2: \"black\",\r\n        backgroundColor: \"#333\",\r\n        borderColor: 'white',\r\n        buttonColor: '#352f44',\r\n        buttonColor2: '#dbd8e3',\r\n        saveColor: '#5c5470',\r\n        body: 'white'\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default AppTheme;","import React, { useState, useContext } from \"react\";\r\nimport AppTheme from \"../Colours\";\r\nimport ThemeContext from \"../ThemeContext\";\r\n\r\nfunction Form(props) {\r\n\r\n    const [name, setName] = useState('');\r\n\r\n    const theme = useContext(ThemeContext)[0];\r\n    const currentTheme = AppTheme[theme];\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (name !== '') {\r\n            props.addTask(name)};\r\n        setName(\"\");\r\n    }\r\n\r\n    function handleChange(e) {\r\n        setName(e.target.value);\r\n    }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2 className=\"label-wrapper\">\r\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n          What needs to be done?\r\n        </label>\r\n      </h2>\r\n      <input\r\n      style = {{\r\n        backgroundColor: `${currentTheme.backgroundColor}`,\r\n        color: `${currentTheme.textColor}`,\r\n        borderColor: `${currentTheme.borderColor}`\r\n    }}\r\n        type=\"text\"\r\n        id=\"new-todo-input\"\r\n        className=\"input input__lg\"\r\n        name=\"text\"\r\n        autoComplete=\"off\"\r\n        value={name}\r\n        onChange={handleChange}\r\n      />\r\n      <button \r\n      style = {{\r\n        backgroundColor: `${currentTheme.saveColor}`,\r\n        borderColor: `${currentTheme.borderColor}`\r\n      }}\r\n      type=\"submit\" className=\"btn btn__primary btn__lg\">\r\n        Add\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;","import React from \"react\";\r\n\r\nfunction FilterButton(props) {\r\n  return (\r\n    <button type=\"button\" \r\n    className=\"btn toggle-btn\" \r\n    aria-pressed={props.isPressed}\r\n    onClick={() => props.setFilter(props.name)}\r\n    >\r\n      <span className=\"visually-hidden\">Show </span>\r\n      <span>{props.name} </span>\r\n      <span className=\"visually-hidden\"> tasks</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default FilterButton;","import React, { useState, useContext } from \"react\";\r\nimport AppTheme from \"../Colours\";\r\nimport ThemeContext from \"../ThemeContext\";\r\n\r\n\r\nexport default function Todo(props) {\r\n    const [isEditing, setEditing] = useState(false);\r\n    const [newName, setNewName] = useState('');\r\n\r\n    const theme = useContext(ThemeContext)[0];\r\n    const currentTheme = AppTheme[theme];\r\n\r\n    function handleChange(e) {\r\n        setNewName(e.target.value);\r\n      }\r\n\r\n\r\n      function handleSubmit(e) {\r\n        e.preventDefault();\r\n        props.editTask(props.id, newName);\r\n        setNewName(\"\");\r\n        setEditing(false);\r\n      }\r\n\r\n\r\n\r\n    const editingTemplate = (\r\n        <form className=\"stack-small\" onSubmit={handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label className=\"todo-label\" htmlFor={props.id}>\r\n              New name for {props.name}\r\n            </label>\r\n            <input \r\n            style = {{\r\n              backgroundColor: `${currentTheme.backgroundColor}`,\r\n              color: `${currentTheme.textColor}`,\r\n              borderColor: `${currentTheme.borderColor}`\r\n          }}\r\n            id={props.id} \r\n            className=\"todo-text\" \r\n            type=\"text\" \r\n            value={newName}\r\n            onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"btn-group\">\r\n            <button \r\n            style={{\r\n              borderColor: `${currentTheme.borderColor}`\r\n            }}\r\n            \r\n            type=\"button\" className=\"btn todo-cancel\" onClick={() => setEditing(false)}>\r\n              Cancel\r\n              <span className=\"visually-hidden\">renaming {props.name}</span>\r\n            </button>\r\n            <button\r\n            style = {{\r\n              backgroundColor: `${currentTheme.saveColor}`,\r\n              borderColor: `${currentTheme.borderColor}`\r\n            }}\r\n            type=\"submit\" className=\"btn btn__primary todo-edit\">\r\n              Save\r\n              <span className=\"visually-hidden\">new name for {props.name}</span>\r\n            </button>\r\n          </div>\r\n        </form>\r\n      );\r\n      const viewTemplate = (\r\n        <div className=\"stack-small\">\r\n          <div className=\"c-cb\">\r\n              <input\r\n                id={props.id}\r\n                type=\"checkbox\"\r\n                defaultChecked={props.completed}\r\n                onChange={() => props.toggleTaskCompleted(props.id)}\r\n              />\r\n              <label className=\"todo-label\" htmlFor={props.id}>\r\n                {props.name}\r\n              </label>\r\n            </div>\r\n            <div className=\"btn-group\">\r\n              <button style={{\r\n                          color: `${currentTheme.textColor2}`,\r\n                          backgroundColor: `${currentTheme.buttonColor2}`,\r\n                          borderColor: `${currentTheme.borderColor}`\r\n                        }}\r\n              \r\n              type=\"button\" className=\"btn\" onClick={() => setEditing(true)}>\r\n                Edit <span className=\"visually-hidden\">{props.name}</span>\r\n              </button>\r\n              <button style={{\r\n                          backgroundColor: `${currentTheme.buttonColor}`,\r\n                          borderColor: `${currentTheme.borderColor}`\r\n                        }}\r\n                type=\"button\"\r\n                className=\"btn btn__danger\"\r\n                onClick={() => props.deleteTask(props.id)}\r\n              >\r\n                Delete <span className=\"visually-hidden\">{props.name}</span>\r\n              </button>\r\n            </div>\r\n        </div>\r\n      );\r\n\r\n    return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}\r\n    </li>;\r\n\r\n  }","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Form from \"./Form\";\r\nimport FilterButton from \"./FilterButton\";\r\nimport Todo from \"./Todo\";\r\nimport { nanoid } from \"nanoid\";\r\nimport AppTheme from \"../Colours\";\r\nimport ThemeContext from \"../ThemeContext\";\r\n\r\n\r\nconst DATA = [\r\n    { id: \"todo-0\", name: \"Eat\", completed: true },\r\n    { id: \"todo-1\", name: \"Sleep\", completed: false },\r\n    { id: \"todo-2\", name: \"Repeat\", completed: false }\r\n  ];\r\n  \r\n  \r\n\r\nconst FILTER_MAP = {\r\n  All: () => true,\r\n  Active: task => !task.completed,\r\n  Completed: task => task.completed\r\n};\r\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\r\n\r\n\r\nfunction Home(props) {\r\n\r\n  const [tasks, setTasks] = useState(DATA);\r\n  const [filter, setFilter] = useState('All');\r\n  const theme = useContext(ThemeContext)[0];\r\n  const currentTheme = AppTheme[theme];\r\n\r\n  useEffect(() => {\r\n    const data = localStorage.getItem('listOfTasks');\r\n    if (data){\r\n      setTasks(JSON.parse(data))\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('listOfTasks', JSON.stringify(tasks));\r\n  });\r\n\r\n  function clearAllTasks() {\r\n    localStorage.removeItem('listOfTasks');\r\n    setTasks([])\r\n  }\r\n\r\n  function toggleTaskCompleted(id) {\r\n    const updatedTasks = tasks.map(task => {\r\n      // if this task has the same ID as the edited task\r\n      if (id === task.id) {\r\n        // use object spread to make a new object\r\n        // whose `completed` prop has been inverted\r\n        return {...task, completed: !task.completed}\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(updatedTasks);\r\n  }\r\n\r\n  function deleteTask(id) {\r\n    const remainingTasks = tasks.filter(task => id !== task.id);\r\n    setTasks(remainingTasks);\r\n  }\r\n\r\n  function editTask(id, newName) {\r\n    const editedTaskList = tasks.map(task => {\r\n    // if this task has the same ID as the edited task\r\n      if (id === task.id) {\r\n        //\r\n        return {...task, name: newName}\r\n      }\r\n      return task;\r\n    });\r\n    setTasks(editedTaskList);\r\n  }\r\n\r\n  const taskList = tasks\r\n  .filter(task => FILTER_MAP[filter](task))\r\n.map(task => (\r\n  <Todo\r\n    id={task.id}\r\n    name={task.name}\r\n    completed={task.completed}\r\n    key={task.id}\r\n    toggleTaskCompleted={toggleTaskCompleted}\r\n    deleteTask={deleteTask}\r\n    editTask={editTask}\r\n  />\r\n));\r\n  const filterList = FILTER_NAMES.map(name => (\r\n    <FilterButton \r\n    key={name} \r\n    name={name}\r\n    isPressed={name === filter}\r\n    setFilter={setFilter}/>\r\n  ));\r\n\r\n  function addTask(name) {\r\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\r\n    setTasks([...tasks, newTask]);\r\n  }\r\n\r\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\r\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\r\n\r\n \r\n  return (\r\n    <div style = {{\r\n        backgroundColor: `${currentTheme.backgroundColor}`,\r\n        color: `${currentTheme.textColor}`,\r\n    }}   className=\"todoapp stack-large\">\r\n      <h1>TodoMatic</h1>\r\n      <Form addTask={addTask}/>\r\n      <div className=\"filters btn-group stack-exception\">\r\n        {filterList}\r\n      </div>\r\n      <h2 id=\"list-heading\">\r\n        {headingText}\r\n      </h2>\r\n      <ul\r\n        className=\"todo-list stack-large stack-exception\"\r\n        aria-labelledby=\"list-heading\"\r\n      >\r\n        {taskList}\r\n      </ul>\r\n\r\n      <button style={{\r\n        backgroundColor: `${currentTheme.buttonColor}`,\r\n        borderColor: `${currentTheme.borderColor}`\r\n      }}\r\n                type=\"button\"\r\n                className=\"btn btn__danger\"\r\n                onClick={() => clearAllTasks()}>\r\n                Clear All Tasks \r\n          </button>\r\n\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, {useContext} from \"react\";\r\nimport AppTheme from \"../Colours\";\r\nimport ThemeContext from \"../ThemeContext\";\r\n\r\nfunction About(props) {\r\n\r\n  const theme = useContext(ThemeContext)[0];\r\n  const currentTheme = AppTheme[theme];\r\n\r\n  return (\r\n    <div\r\n    style = {{\r\n      backgroundColor: `${currentTheme.backgroundColor}`,\r\n      color: `${currentTheme.textColor}`,\r\n  }}>\r\n    <h2>About Me</h2>\r\n    </div> );\r\n}\r\n\r\nexport default About;","import React,{useContext} from \"react\";\r\nimport ThemeContext from \"./ThemeContext\";\r\n\r\nconst themeTogglerStyle = {\r\n    cursor: \"pointer\",\r\n    padding: \"1rem\"\r\n}\r\n\r\nconst ThemeToggler = () => {\r\n    const[themeMode, setThemeMode] = useContext(ThemeContext);\r\n    return(\r\n        <div style = {themeTogglerStyle} onClick = {() => {setThemeMode(themeMode === \"light\"? \"dark\": \"light\")}}>\r\n            <span title = \"switch theme\">\r\n                {themeMode === \"light\" ? \"🌙\" : \"☀️\"}\r\n            </span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ThemeToggler;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AppTheme from \"../Colours\";\r\nimport ThemeContext from \"../ThemeContext\";\r\nimport ThemeToggler from \"../ThemeToggler\";\r\n\r\nfunction NavBar(props) {\r\n\r\n  const theme = useContext(ThemeContext)[0];\r\n  const currentTheme = AppTheme[theme];\r\n  const link_style = {\r\n    backgroundColor: `${currentTheme.backgroundColor}`,\r\n    color: `${currentTheme.textColor}`,\r\n    borderColor: `${currentTheme.borderColor}`\r\n}\r\n  return (\r\n    <div style = {{\r\n        backgroundColor: `${currentTheme.backgroundColor}`,\r\n        color: `${currentTheme.textColor}`\r\n    }}>\r\n        <Link style={link_style} className=\"btn btn__primary btn__sm\" to=\"/\">Home</Link>\r\n        <Link style={link_style} className=\"btn btn__primary btn__sm\" to=\"/about\">About</Link>\r\n        <Link style={link_style} className=\"btn btn__primary btn__sm\" to=\"/api\">API</Link>\r\n\r\n        <ThemeToggler />\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import React, {useContext} from \"react\";\r\nimport AppTheme from \"../Colours\";\r\nimport ThemeContext from \"../ThemeContext\";\r\n\r\nfunction Error(props) {\r\n\r\n  const theme = useContext(ThemeContext)[0];\r\n  const currentTheme = AppTheme[theme];\r\n\r\n\r\n  return (\r\n    <div\r\n    style = {{\r\n      backgroundColor: `${currentTheme.backgroundColor}`,\r\n      color: `${currentTheme.textColor}`,\r\n  }}>\r\n    <h1>Oops! Page not found!</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Error;","import React, {useContext} from \"react\";\r\nimport AppTheme from \"../Colours\";\r\nimport ThemeContext from \"../ThemeContext\";\r\n\r\nfunction City(props) {\r\n\r\n  const theme = useContext(ThemeContext)[0];\r\n  const currentTheme = AppTheme[theme];\r\n  return (\r\n    <div\r\n    style = {{\r\n      backgroundColor: `${currentTheme.backgroundColor}`,\r\n      color: `${currentTheme.textColor}`,\r\n  }}>\r\n    <h1>City</h1>\r\n\r\n  <ul>\r\n   <li> Name: {props.data.full_name}</li>\r\n  <li>Population: {props.data.population}</li>\r\n  <li>Latitude: {props.data.latitude}</li>\r\n  <li>Longitude: {props.data.longitude}</li>\r\n  </ul>\r\n  \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default City;","import React, { useState} from \"react\";\r\nimport axios from 'axios';\r\nimport City from './City';\r\n\r\nfunction API(props) {\r\n\r\n    const [message, setMessage] = useState('')\r\n    const [city, setCity] = useState('');\r\n    const [data, setData] = useState({});\r\n    const instance = axios.create({\r\n      baseURL: 'https://api.teleport.org/api',\r\n      headers: {'Accept': 'application/json'}\r\n  })\r\n\r\n    function citySearch(url){\r\n        instance.get(url)\r\n        .then(function (response) {\r\n          const city_data = {\r\n            full_name: response.data.full_name,\r\n            population: response.data.population,\r\n            latitude: response.data.location.latlon.latitude,\r\n            longitude: response.data.location.latlon.longitude\r\n          }\r\n            setData(city_data)\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    function handleChange(e) {\r\n        setCity(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n      e.preventDefault();\r\n      if (city === ''){\r\n        setMessage('Enter a City');\r\n        return\r\n      }else{\r\n        setMessage('Lookin\\' it up')\r\n      }\r\n       const params = {\r\n           search: city,    \r\n       }\r\n        instance.get('/cities',\r\n        {params})\r\n        .then(function (response) {\r\n        citySearch(response.data._embedded['city:search-results'][0]._links['city:item'].href);\r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n    <form onSubmit={handleSubmit}>\r\n        <h2 className=\"label-wrapper\">\r\n          <label htmlFor=\"new-todo-input\" className=\"label__lg\">\r\n          Lookup a City\r\n          </label>\r\n        </h2>\r\n        <input\r\n          type=\"text\"\r\n          id=\"new-todo-input\"\r\n          className=\"input input__lg\"\r\n          name=\"text\"\r\n          autoComplete=\"off\"\r\n          value={city}\r\n        onChange={handleChange}\r\n        />\r\n        <button \r\n        type=\"submit\" className=\"btn btn__primary btn__lg\">\r\n          Search\r\n        </button>\r\n        {message}\r\n      </form>\r\n      <City\r\n        data={data}/>\r\n      </div>\r\n      );\r\n      \r\n\r\n\r\n}\r\n\r\nexport default API;","import React, { useState, useContext} from \"react\";\nimport { Route, Switch } from 'react-router-dom';\n\nimport { createGlobalStyle} from \"styled-components\"\nimport ThemeContext from './ThemeContext'\nimport AppTheme from \"./Colours\";\n\nimport Home from './components/Home'\nimport About from './components/About'\nimport NavBar from './components/Navbar'\nimport Error from './components/Error'\nimport API from './components/API'\n\n\n\nfunction App(props) {\n  \n  const themeHook = useState('light');\n  \n  const theme = useContext(ThemeContext)[0];\n  const currentTheme = AppTheme[theme];\n  \n  const GlobalStyles = createGlobalStyle`\n  body {\n    background: ${currentTheme.body};\n  }\n  `\n  return (\n\n    <ThemeContext.Provider value = {themeHook}>\n      <GlobalStyles/>\n      <NavBar />\n        <Switch>\n          <Route path='/' component={Home} exact />\n          <Route path='/about' component={About} />\n          <Route path='/api' component={API} />\n          <Route component={Error} />\n        </Switch>\n    </ThemeContext.Provider>\n   \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n      <BrowserRouter>\n      <App />\n      </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}